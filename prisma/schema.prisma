// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User{
  id String @id @default(uuid())
  clerkUserId String @unique
  email String @unique
  name String?
  imageUrl String?
  phone String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role UserRole @default(USER)
  savedCars UserSavedCars[]
  testDrives  TestDriveBooking[]
}

enum UserRole {
  USER
  ADMIN
}

enum CarStatus {
  AVAILABLE
  UNAVAILABLE
  SOLD
}

model Cars{
  id String @id @default(uuid())
  make String
  model String
  year Int
  price Decimal @db.Decimal(10,2)
  mileage Int
  color String
  fuelType String
  transmission String
  bodyType String
  seats Int?
  description String
  status CarStatus @default(AVAILABLE)
  featured Boolean @default(false)
  image String[]
  savedBy UserSavedCars[]
  testDriveBooking TestDriveBooking[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([make, model])
  @@index([bodyType])
  @@index([price])
  @@index([year])
  @@index([status])
  @@index([fuelType])
  @@index([featured])
}

model DealershipInfo{
  id String @id @default(uuid())
  name String @default("Vehiql Motors")
  address String @default("45 Car Street, Autoville, CA 65584")
  phone String @default("+92 (336) 1250 530")
  email String @default("contact@Vehiql.com")
  workingHours WorkingHour[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WorkingHour{
  id String @id @default(uuid())
  dealershipId String
  dealership DealershipInfo @relation(fields:[dealershipId],references:[id], onDelete: Cascade)
  dayOfWeek DayOfWeek
  openTime String
  closeTime String
  isOpen Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([dealershipId, dayOfWeek])
  @@index([dealershipId])
  @@index([dayOfWeek])
  @@index([isOpen])
}

enum DayOfWeek{
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model UserSavedCars{
  id String @id @default(uuid())
  userId String
  user User @relation(fields:[userId],references:[id], onDelete: Cascade)
  carId String
  car Cars @relation(fields:[carId],references:[id], onDelete: Cascade)
  savedAt DateTime @default(now())

  @@unique([userId, carId])
  @@index([userId])
  @@index([carId])
}

model TestDriveBooking{
  id String @id @default(uuid())
  carId String
  car Cars @relation(fields:[carId],references:[id])
  userId String
  user User @relation(fields:[userId],references:[id])
  bookingDate DateTime @db.Date
  startTime String
  endTime String
  status BookingStatus @default(PENDING)
  notes String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([carId])
  @@index([userId])
  @@index([bookingDate])
  @@index([status])
}

enum BookingStatus{
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
  NO_SHOW
}